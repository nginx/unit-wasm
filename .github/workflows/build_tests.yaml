name: Builds

on:
  push:
    branches: main
    paths:
      - Makefile
      - shared.mk
      - 'examples/**'
      - 'src/**'
      - '.github/workflows/build_tests.yaml'
  pull_request:
    branches: main
    paths:
      - Makefile
      - shared.mk
      - 'examples/**'
      - 'src/**'
      - '.github/workflows/build_tests.yaml'

jobs:
  # GitHub Currently only supports running directly on Ubuntu,
  # for any other Linux we need to use a container.

  fedora-rawhide:
    runs-on: ubuntu-latest

    container:
      image: fedora:rawhide

    steps:
      - name: Install tools/deps
        run: |
          dnf -y install git wget clang llvm compiler-rt lld make wasi-libc-devel cargo rust rust-std-static-wasm32-wasip1
          wget -O- https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-20/libclang_rt.builtins-wasm32-wasi-20.0.tar.gz | tar --strip-components=1 -xvzf - -C $(dirname $(clang -print-runtime-dir))

      - uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      - name: make
        run: make V=1 E=1 all

  debian-testing:
    runs-on: ubuntu-latest

    container:
      image: debian:testing

    steps:
      - name: Install tools/deps
        run: |
          apt-get -y update
          apt-get -y install git curl wget wasi-libc make clang llvm lld
          wget -O- https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-20/libclang_rt.builtins-wasm32-wasi-20.0.tar.gz | tar --strip-components=1 -xvzf - -C $(dirname $(clang -print-runtime-dir))
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          . "$HOME/.cargo/env"
          rustup target add wasm32-wasip1
          wget -O- https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-20/wasi-sysroot-20.0.tar.gz | tar -xzf - -C ${RUNNER_TEMP}

      - uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      - name: make
        run: |
          . "$HOME/.cargo/env"
          make WASI_SYSROOT=${RUNNER_TEMP}/wasi-sysroot V=1 E=1 all
